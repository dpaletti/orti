# SPDX-FileCopyrightText: 2025 Daniele Paletti <danielepaletti98@gmail.com>
#
# SPDX-License-Identifier: CC-BY-SA-4.0

[env]
# Remove time from commits, keep only date
UTC_DAY_BEGIN = "{{ now() | date(format='%Y-%m-%dT00:00:00+0000', timezone='UTC') }}"
GIT_COMMITTER_DATE = "{{ env.UTC_DAY_BEGIN }}"
GIT_AUTHOR_DATE = "{{ env.UTC_DAY_BEGIN }}"

VALE_CONFIG_PATH=".vale/vale.ini"

[tools]
node = "24"
python = "3.13"
pandoc = "3.6.1"

# Prose linting
vale = "3.12.0"

# Precommit hooks
"pipx:pre-commit" = "4.2.0"
"pipx:reuse" = "5.0.2"

# Markdown utilities
## linting
"npm:markdownlint-cli2" = "0.18.1"

# Formatting
"npm:prettier" = "3.6.2"

# Diagrams
"npm:@mermaid-js/mermaid-cli" = "11.6.0"

[tasks.prettier]
run = "prettier --find-config-path --config .prettierrc.json"

[tasks.setup]
description = "Setup development environment"
run = """
echo "Setting up development tools..."

mise install
echo "Installed mise tools"

pre-commit install
echo "Installed pre-commit hooks"

vale sync
echo "Set up vale for linting"

echo "Setting up DCO commit signing..."
git config --local format.signoff true
echo "Git configured to auto-sign commits with DCO"
git config --local commit.gpgsign false
echo "Disabled gpg commit sigining."

echo "Development environment ready!"
"""

[tasks.md_lint_format]
description = "Run linting and formatting all markdown files. (precommit-hook)"
# Some tools may not respect .gitignore correctly
# We implement the expansion ourselves to be consistent
run = """
not_ignored_md_files="$( ( git status --short| grep '^?' | cut -d\\  -f2- && git ls-files ) | sort -u | grep -E '\\.(md|markdown|mdown)$')"
echo "Files to consider: "
echo $not_ignored_md_files
echo "Formatting..."
(echo $not_ignored_md_files) | xargs prettier -w
echo "Linting markdown file structure..."
(echo $not_ignored_md_files) | xargs markdownlint-cli2
echo "Linting markdown file content..."
(echo $not_ignored_md_files) | xargs vale
"""

[tasks.dco_enforce]
description = "Check if the commit message complies with developer certificate of origin (DCO)"
run = """
COMMIT_MSG_FILE=$1

if ! grep -qE '^Signed-off-by:[[:space:]]+[^<]+<[^>]+>$' "$COMMIT_MSG_FILE"; then
    echo "ERROR: Commit message is missing 'Signed-off-by' line." >&2
    echo "Add it with '-s' in your commit command 'git commit -s ...'" >&2
    exit 1
fi
"""

[tasks.precommit]
description = "Run precommit hooks"
run = """
echo "Running pre-commit on all files..."
pre-commit run --all-files
"""
